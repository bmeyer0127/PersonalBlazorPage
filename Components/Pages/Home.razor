@page "/"
@namespace Home
@rendermode InteractiveServer
@using Star
@using Bird
@using Microsoft.AspNetCore.Mvc.TagHelpers


<PageTitle>Ahoy</PageTitle>

<div class="intro-background-container">

    <div class="professional-background">
        <div class="star-container">
            @for(int i = 0; i < 20; i++)
            {
                <div class="star-row">
                    @for(int j = 0; j < 20; j++)
                    {               
                        <Star />
                    }
                </div>
            }
        </div>
    </div>

    <div class="professional-name-gap" />

    <div class="name-background">
        <div class="bird-container">
            @for(int i = 0; i < 5; i++)
            {
                <div class="bird-row">
                    @for(int j = 0; j < 9; j++)
                    {
                        if (isCorrectBird(i, j))
                        {
                            <Bird isVisible="true" />
                        }
                        else
                        {
                            <Bird isVisible="false" />
                        }
                    }
                </div>
            }
        </div>
    </div>

    <div class="name-personal-gap" />

    <div class="personal-background"></div>
</div>

<div class="header-container">
    <h2 class="intro-header">Professional stuff</h2>
    <h2 class="intro-header text-center">hey friend, <br /> i'm brett</h2>
    <h2 class="intro-header">Personal stuff</h2>
</div>


@code
{
    // God this looks so dumb. Would love to make a cute formula for this
    private bool isCorrectBird(int i, int j)
    {
        if ((i == 0 || i == 4) && (j == 0 || j == 1 || j == 2))
        {
            return true;
        }
        if ((i == 1 || i == 3) && (j == 4 || j == 5 || j == 6))
        {
            return true;
        }
        if ((i == 2) && (j == 8))
        {
            return true;
        }

        return false;
    }

    // private static Random rand = new Random();

    // private static int[] getVisibleStars()
    // {
    //     int newI = rand.Next(20);
    //     int newJ = rand.Next(10);

    //     return [newI, newJ];
    // }

    // int[] visibleStars = getVisibleStars();

    // Make a 2D array to get multiple stars visible at the same time

    // int[] starCoords = getVisibleStars();

    // private string getStarStyles(int i, int j)
    // {
    //     Console.WriteLine($"{starCoords[0]}, {starCoords[1]}");

    //     if (starCoords[0] == i && starCoords[1] == j)
    //     {
    //         return "opacity: 100%";
    //     }
    //     return "opacity: 0%";
    // }

}