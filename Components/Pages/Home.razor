@* @page "/" *@
@namespace Home
@rendermode InteractiveServer
@inject TransitionState transitionState
@using BirdContainer
@using StarContainer
@using ProfessionalSection
@using PersonalBlazorPage.Services
@using Microsoft.AspNetCore.Mvc.TagHelpers

@* <PageTitle>Ahoy</PageTitle> *@

@* <div class="@(transitionState.professionalSectionTransition)">
    <ProfessionalSection />
</div> *@

<div class="intro-background-container @(homeClasses)">
    <div class="professional-background">
        <StarContainer />
    </div>

    <div class="professional-name-gap">
        <StarContainer />
    </div>

    <div class="name-background">
        <BirdContainer />
    </div>

    <div class="name-personal-gap" />

    <div class="personal-background-container">
        <svg class="personal-background" xmlns="http://www.w3.org/2000/svg" viewBox="0 -1.5 23 1.5">
            <path d="M0 0C7-2 16-2 23 0" fill="url(#Gradient)" />
            <defs>
                <linearGradient id="Gradient" x1="0" x2="0" y1="0" y2="1">
                    <stop offset="0%" stop-color="#968a1e" />
                    <stop offset="33%" stop-color="#7d8d26" />
                    <stop offset="66%" stop-color="#727e00" />
                    <stop offset="100%" stop-color="#586700" />
                </linearGradient>
            </defs>
        </svg>
    </div>
</div>

<div class="header-container @(homeClasses)">
    <button class="intro-header btn prof-btn" @onclick="() => {Main.SetProfessionalUp(); InvokeAsync(StateHasChanged);}">Professional stuff</button>
    <h2 class="intro-header text-center">
        hey friend, <br />
            <span class="name">
                <span>i'm&nbsp</span>
                <span class="letter-b">b</span><span class="letter-r">r</span><span class="letter-e">e</span><span class="letter-first-t">t</span><span class="letter-second-t">t</span>
            </span>
    </h2>

    <h2 class="intro-header">Personal stuff</h2>
    <button class="btn btn-primary reentry-btn" @onclick="() => Console.WriteLine(test())">ahoy</button>
</div>


@code
{
    private void SetPersonalClass()
    {
        transitionState.personalTransition = "personal";
        InvokeAsync(StateHasChanged);
    }

    private string test()
    {
        return ($"professionalSectionTransition: {transitionState.professionalSectionTransition}\n professionalTransition: {transitionState.professionalTransition}");
    }

    [Parameter]
    public string? homeClasses { get; set; }
}