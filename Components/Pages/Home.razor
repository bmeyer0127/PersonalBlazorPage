@page "/"
@namespace Home
@rendermode InteractiveServer
@using BirdContainer
@using StarContainer
@using ProfessionalSection
@using Microsoft.AspNetCore.Mvc.TagHelpers

<PageTitle>Ahoy</PageTitle>

<div class="@(professionalSectionTransition)">
    <ProfessionalSection />
</div>

<div class="intro-background-container @(professionalTransition) @(personalTransition)">
    <div class="professional-background">
        <StarContainer />
    </div>

    <div class="professional-name-gap" />

    <div class="name-background">
        <BirdContainer />
    </div>

    <div class="name-personal-gap" />

    <div class="personal-background-container">
        <svg class="personal-background" xmlns="http://www.w3.org/2000/svg" viewBox="0 -1.5 23 1.5">
            <path d="M0 0C7-2 16-2 23 0" fill="url(#Gradient)" />
            <defs>
                <linearGradient id="Gradient" x1="0" x2="0" y1="0" y2="1">
                    <stop offset="0%" stop-color="#968a1e" />
                    <stop offset="33%" stop-color="#7d8d26" />
                    <stop offset="66%" stop-color="#727e00" />
                    <stop offset="100%" stop-color="#586700" />
                </linearGradient>
            </defs>
        </svg>
    </div>
</div>

<div class="header-container @(professionalTransition) @(personalTransition)">
    <button class="intro-header btn prof-btn" @onclick="() => SetProfessionalClass()">Professional stuff</button>
    <h2 class="intro-header text-center">hey friend, <br /> i'm brett</h2>
    <h2 class="intro-header">Personal stuff</h2>
</div>


@code
{
    private string professionalTransition = "";
    private string professionalSectionTransition = "prof-section-before";
    private string personalTransition = "";

    private void SetProfessionalClass()
    {
        professionalTransition = "blast-off";
        professionalSectionTransition = "prof-section-after";
        InvokeAsync(StateHasChanged);
    }

    private void SetPersonalClass()
    {
        personalTransition = "personal";
        InvokeAsync(StateHasChanged);
    }
}